from pygame import *
from random import randint

font.init()
font = font.Font(None, 50)
lose1 = font.render('PLAYER 1 LOSE!', True, (200, 0, 0))
lose2 = font.render('PLAYER 2 LOSE!', True, (200, 0, 0))

img_back = "123.png" #фон игры
img_bullet = "bullet.png" #пуля
img_hero = "rock.png" #герой
img_enemy = "track.png" #враг
img_ball = "456.png"
speed_x = 1
speed_y = 1

class GameSprite(sprite.Sprite):
 #конструктор класса
   def __init__(self, player_image, player_x, player_y, size_x, size_y, player_speed):
       #вызываем конструктор класса (Sprite):
       sprite.Sprite.__init__(self)
 
       #каждый спрайт должен хранить свойство image - изображение
       self.image = transform.scale(image.load(player_image), (size_x, size_y))
       self.speed = player_speed
 
       #каждый спрайт должен хранить свойство rect - прямоугольник, в который он вписан
       self.rect = self.image.get_rect()
       self.rect.x = player_x
       self.rect.y = player_y
 #метод, отрисовывающий героя на окне
   def reset(self):
       window.blit(self.image, (self.rect.x, self.rect.y))
 
#класс главного игрока
class Player(GameSprite):
   #метод для управления спрайтом стрелками клавиатуры
   def update(self):
       keys = key.get_pressed()
       if keys[K_LEFT] and self.rect.y > 5:
           self.rect.y -= self.speed
       if keys[K_RIGHT] and self.rect.y < 360:
           self.rect.y += self.speed
   def update1(self):
       keys = key.get_pressed()
       if keys[K_a] and self.rect.y > 5:
           self.rect.y -= self.speed
       if keys[K_d] and self.rect.y < 360:
           self.rect.y += self.speed

 
win_width = 700
win_height = 500
display.set_caption("Shooter")
window = display.set_mode((win_width, win_height))
background = transform.scale(image.load(img_back), (win_width, win_height))
ship = Player(img_hero, 630, win_height - 140, 20, 130, 7)
ship1 = Player(img_enemy, 45, win_height - 140, 20, 130, 7)
ball = GameSprite(img_ball, 100, 100, 45, 45, 1)

finish = False
#основной цикл игры:
run = True


while run:
   #событие нажатия на кнопку Закрыть
   for e in event.get():
       if e.type == QUIT:
           run = False
   
 #сама игра: действия спрайтов, проверка правил игры, перерисовка
   if not finish:
       #обновляем фон
       ball.rect.x += speed_x
       ball.rect.y -= speed_y
       window.blit(background,(0,0))

       if sprite.collide_rect(ship1, ball) or sprite.collide_rect(ship, ball):
           speed_x *= -2
           speed_y *= 2


       if ball.rect.x < 0:
           finish = True
           window.blit(lose1, (200, 200))
           game_over = True
 
       #если мяч улетел дальше ракетки, выводим условие проигрыша для второго игрока
       if ball.rect.x > win_width:
           finish = True
           window.blit(lose2, (200, 200))
           game_over = True

       if ball.rect.y > win_height-50 or ball.rect.y < 0:
           speed_y *= -1

       ship1.update1()
       ship1.reset()
       ship.update()
       ship.reset()
       ball.reset()
       display.update()


time.delay(50)
